#######################################
# Boom - A Kaboom clone for the CHIP-8
# Written by Bryce Vandegrift
#######################################

# Constants and variables
#######################################

:const BOMBER_HEIGHT 12
:const BOMB_HEIGHT 4
:const CHAR_WIDTH 6
:const CHAR_HEIGHT 9

:alias paddlex v4
:alias paddle_num v5
:alias bomberx v6
:alias bomb1x v7
:alias bomb1y v8
:alias bomb2x v9
:alias bomb2y va
:alias bomb3x vb
:alias bomb3y vc
:alias active_bombs vd
:alias bomb_cycles ve

# Macros to make the game slightly faster
##########################################

:macro SYNC N {
	loop
		v0 := delay
		if v0 != 0 then
	again

	v0 := N
	delay := v0
}

:macro DRAW_PADDLE {
	if paddle_num == 3 begin
		i := paddle3
		v0 := 26
		sprite paddlex v0 5
	end

	if paddle_num == 2 begin
		i := paddle2
		v0 := 28
		sprite paddlex v0 3
	end

	if paddle_num == 1 begin
		i := paddle1
		v0 := 30
		sprite paddlex v0 1
	end
}

:macro DRAW_BOMBER {
	i := bomber
	v0 := 0
	sprite bomberx v0 BOMBER_HEIGHT
}

:macro DRAW_BOMB1 {
	i := bomb
	sprite bomb1x bomb1y 4
}

:macro DRAW_BOMB2 {
	i := bomb
	sprite bomb2x bomb2y 4
}

:macro DRAW_BOMB3 {
	i := bomb
	sprite bomb3x bomb3y 4
}

# String printing macros
######################################

:stringmode print "BomPres'EtSaGOvWinby:cVdgf!" {
	:calc addr { font + VALUE * 9 }
	i := addr
	sprite v0 v1 CHAR_HEIGHT
	v0 += CHAR_WIDTH
}

:stringmode print " " {
	v0 += CHAR_WIDTH
}

# Sprite data
########################################################

: font
	0x00 0xF0 0x88 0x88 0xF0 0x88 0x88 0xF0 0x00 # B
	0x00 0x00 0x00 0x70 0x88 0x88 0x88 0x70 0x00 # o
	0x00 0x00 0x00 0xF0 0xA8 0xA8 0xA8 0xA8 0x00 # m
	0x00 0xF0 0x88 0x88 0xF0 0x80 0x80 0x80 0x00 # P
	0x00 0x00 0x00 0xB0 0xC8 0x80 0x80 0x80 0x00 # r
	0x00 0x00 0x00 0x70 0x88 0xF8 0x80 0x78 0x00 # e
	0x00 0x00 0x00 0x78 0x80 0x70 0x08 0xF0 0x00 # s
	0x20 0x20 0x20 0x00 0x00 0x00 0x00 0x00 0x00 # '
	0x00 0xF8 0x80 0x80 0xF0 0x80 0x80 0xF8 0x00 # E
	0x00 0x20 0x20 0x78 0x20 0x20 0x20 0x18 0x00 # t
	0x00 0x70 0x88 0x80 0x70 0x08 0x88 0x70 0x00 # S
	0x00 0x00 0x00 0x78 0x88 0x88 0x98 0x68 0x00 # a
	0x00 0x70 0x88 0x80 0x98 0x88 0x88 0x70 0x00 # G
	0x00 0x70 0x88 0x88 0x88 0x88 0x88 0x70 0x00 # O
	0x00 0x00 0x00 0x88 0x88 0x50 0x50 0x20 0x00 # v
	0x00 0x88 0x88 0x88 0x88 0xA8 0xD8 0x88 0x00 # W
	0x00 0x20 0x00 0x20 0x20 0x20 0x20 0x20 0x00 # i
	0x00 0x00 0x00 0xB0 0xC8 0x88 0x88 0x88 0x00 # n
	0x00 0x80 0x80 0xF0 0x88 0x88 0x88 0xF0 0x00 # b
	0x00 0x00 0x00 0x88 0x88 0x88 0x78 0x08 0x70 # y
	0x00 0x00 0x60 0x60 0x00 0x60 0x60 0x00 0x00 # :
	0x00 0x00 0x00 0x70 0x88 0x80 0x80 0x78 0x00 # c
	0x00 0x88 0x88 0x88 0x50 0x50 0x20 0x20 0x00 # V
	0x00 0x08 0x08 0x78 0x88 0x88 0x88 0x78 0x00 # d
	0x00 0x00 0x00 0x78 0x88 0x88 0x78 0x08 0x70 # g
	0x00 0x18 0x20 0x70 0x20 0x20 0x20 0x20 0x00 # f
	0x00 0x20 0x20 0x20 0x20 0x20 0x00 0x20 0x00 # !

: paddle1
	0b11111100

: paddle2
	0b11111100
	0b00000000
	0b11111100

: paddle3
	0b11111100
	0b00000000
	0b11111100
	0b00000000
	0b11111100

: bomber
	0x3C
	0x42
	0xA5
	0x81
	0x5A
	0x24
	0x7E
	0xFF
	0x99
	0x99
	0x99
	0x42

: bomb
	0b01100000
	0b11110000
	0b11110000
	0b01100000

# Actual code
#######################################

: paddle_left
	DRAW_PADDLE
	paddlex -= 1
	DRAW_PADDLE
;

: paddle_right
	DRAW_PADDLE
	paddlex += 1
	DRAW_PADDLE
;

: move_bomber
	DRAW_BOMBER

	v0 := random 0xff
	if v0 < 128 begin
		if bomberx >= 2 then bomberx -= 2
	else
		if bomberx <= 54 then bomberx += 2
	end

	DRAW_BOMBER
;

: remove_paddle
	if paddle_num == 3 begin
		i := paddle1
		v0 := 26
		sprite paddlex v0 1
	end

	if paddle_num == 2 begin
		i := paddle1
		v0 := 28
		sprite paddlex v0 1
	end

	if paddle_num == 1 begin
		i := paddle1
		v0 := 30
		sprite paddlex v0 1
	end

	paddle_num -= 1
	v0 := 45
	buzzer := v0
;

: move_bombs
	# Keep track of bombs by using 3 bits
	if active_bombs == 0b00000000 then return

	:calc BOMB_DIST { 32 - BOMB_HEIGHT }

	v0 := 0b00000001
	v0 &= active_bombs
	if v0 == 0b00000001 begin
		DRAW_BOMB1

		if bomb1y == BOMB_DIST begin
			v1 := 0b00000001
			active_bombs ^= v1
			remove_paddle
			jump next1
		end
		bomb1y += 1

		DRAW_BOMB1
		if vf != 0 begin
			v1 := 0b00000001
			active_bombs ^= v1
			DRAW_BOMB1
			v0 := 3
			buzzer := v0
		end
	end
: next1

	v0 := 0b00000010
	v0 &= active_bombs
	if v0 == 0b00000010 begin
		DRAW_BOMB2

		if bomb2y == BOMB_DIST begin
			v1 := 0b00000010
			active_bombs ^= v1
			remove_paddle
			jump next2
		end
		bomb2y += 1

		DRAW_BOMB2
		if vf != 0 begin
			v1 := 0b00000010
			active_bombs ^= v1
			DRAW_BOMB2
			v0 := 3
			buzzer := v0
		end
	end
: next2

	v0 := 0b00000100
	v0 &= active_bombs
	if v0 == 0b00000100 begin
		DRAW_BOMB3

		bomb3y += 1
		if bomb3y == BOMB_DIST begin
			v1 := 0b00000100
			active_bombs ^= v1
			remove_paddle
			return
		end

		DRAW_BOMB3
		if vf != 0 begin
			v1 := 0b00000100
			active_bombs ^= v1
			DRAW_BOMB3
			v0 := 3
			buzzer := v0
		end
	end
;

: drop_bombs
	# Keep track of bombs by using 3 bits
	if active_bombs == 0b00000111 then return

	v0 := 0b00000001
	v0 &= active_bombs
	if v0 == 0b00000000 begin
		bomb1x := bomberx
		bomb1y := BOMBER_HEIGHT
		v1 := 0b00000001
		active_bombs ^= v1
		DRAW_BOMB1
		return
	end

	v0 := 0b00000010
	v0 &= active_bombs
	if v0 == 0b00000000 begin
		bomb2x := bomberx
		bomb2y := BOMBER_HEIGHT
		v1 := 0b00000010
		active_bombs ^= v1
		DRAW_BOMB2
		return
	end

	v0 := 0b00000100
	v0 &= active_bombs
	if v0 == 0b00000000 begin
		bomb3x := bomberx
		bomb3y := BOMBER_HEIGHT
		v1 := 0b00000100
		active_bombs ^= v1
		DRAW_BOMB3
		return
	end
;

: gameover
	clear

	v0 := 4
	v1 := 11
	print "Game Over!"

	loop
		v0 := OCTO_KEY_E
		if v0 key then jump try_again
	again
;

: title
	clear

	v0 := 16
	v1 := 0
	print "Boom!"
	v0 := 6
	v1 := 11
	print "Press 'E'"
	v0 := 6
	v1 := 21
	print "to Start"

	loop
		v0 := OCTO_KEY_E
		if v0 key then return
	again
;

: easter_egg
	# A not very secret easter egg :/
	clear

	v0 := 0
	v1 := 0
	print "Written by:"
	v0 := 0
	v1 := 11
	print "Bryce"
	v0 := 0
	v1 := 22
	print "Vandegrift"

	loop
		v0 := OCTO_KEY_E
		if v0 key then jump try_again
	again
;

: reset
	clear

	paddlex := 26
	paddle_num := 3
	bomberx := 25
	active_bombs := 0b00000000
	bomb_cycles := 0

	DRAW_PADDLE
	DRAW_BOMBER
;

: main
	title
: try_again
	reset
	SYNC 64

	loop
		v0 := OCTO_KEY_A
		if v0 key then paddle_left
		v0 := OCTO_KEY_D
		if v0 key then paddle_right
		v0 := OCTO_KEY_Z
		if v0 key then easter_egg

		move_bomber
		move_bombs
		if bomb_cycles == 8 begin
			drop_bombs
			bomb_cycles := 0
		end
		bomb_cycles += 1

		if paddle_num == 0 then gameover

		SYNC 1
	again
